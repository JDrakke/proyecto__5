{"ast":null,"code":"import axios from'axios';// Crear una instancia de Axios\nconst instance=axios.create({baseURL:'http://localhost:5000/api'// Cambia esto a la URL de tu API\n});// Añadir un interceptor para incluir el token en las solicitudes\ninstance.interceptors.request.use(config=>{const token=localStorage.getItem('token');if(token){config.headers.Authorization=`Bearer ${token}`;}return config;},error=>Promise.reject(error));export default instance;","map":{"version":3,"names":["axios","instance","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","error","Promise","reject"],"sources":["C:/Users/Usuario/Desktop/Full stack developer/Proyectos finales/proyecto5/fronted/src/axios.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Crear una instancia de Axios\r\nconst instance = axios.create({\r\n  baseURL: 'http://localhost:5000/api', // Cambia esto a la URL de tu API\r\n});\r\n\r\n// Añadir un interceptor para incluir el token en las solicitudes\r\ninstance.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => Promise.reject(error)\r\n);\r\n\r\nexport default instance;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB;AACA,KAAM,CAAAC,QAAQ,CAAGD,KAAK,CAACE,MAAM,CAAC,CAC5BC,OAAO,CAAE,2BAA6B;AACxC,CAAC,CAAC,CAEF;AACAF,QAAQ,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAC9BC,MAAM,EAAK,CACV,KAAM,CAAAC,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAC3C,GAAIF,KAAK,CAAE,CACTD,MAAM,CAACI,OAAO,CAACC,aAAa,CAAG,UAAUJ,KAAK,EAAE,CAClD,CACA,MAAO,CAAAD,MAAM,CACf,CAAC,CACAM,KAAK,EAAKC,OAAO,CAACC,MAAM,CAACF,KAAK,CACjC,CAAC,CAED,cAAe,CAAAZ,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}